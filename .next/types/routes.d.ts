// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/Components/Card" | "/Components/Testiomonials" | "/Components/footer" | "/Components/navbar" | "/Components/section3" | "/dashboard" | "/dashboard/bins" | "/dashboard/driver" | "/dashboard/notifications" | "/dashboard/routes" | "/dashboard/settings" | "/dashboard/users" | "/favicon.ico"
type PageRoutes = never
type LayoutRoutes = "/" | "/dashboard"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes


interface ParamMap {
  "/": {}
  "/Components/Card": {}
  "/Components/footer": {}
  "/Components/navbar": {}
  "/Components/section3": {}
  "/Components/Testiomonials": {}
  "/dashboard": {}
  "/dashboard/bins": {}
  "/dashboard/driver": {}
  "/dashboard/notifications": {}
  "/dashboard/routes": {}
  "/dashboard/settings": {}
  "/dashboard/users": {}
  "/favicon.ico": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/dashboard": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }
  
  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }
}
